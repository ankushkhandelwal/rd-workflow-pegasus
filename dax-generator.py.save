#!/usr/bin/env python

import glob
import math
import os
import re
import sys
import numpy as np

from Pegasus.DAX3 import *

top_dir = os.getcwd()

dax = ADAG('MINT')

box_file = sys.argv[1] # example: Boxes.shp
sdate = sys.argv[2] # example: 2017-01-01
edate = sys.argv[3] # example: 2017-12-31
box_list = sys.argv[4] # example: Boxes
job_name = sys.argv[5]

code_file = File('rd-main.tar.gz')
code_file.addPFN(PFN('file://' + top_dir + '/generated/' + job_name + '/rd-main.tar.gz', site='local'))
dax.addFile(code_file)

data_file = File('rd-data.tar.gz')
data_file.addPFN(PFN('file://' + top_dir + '/generated/' + job_name + '/rd-data.tar.gz', site='local'))
dax.addFile(data_file)

job = Job('raster-clip-wrapper.sh')
job.uses(code_file,link=Link.INPUT)
job.uses(data_file,link=Link.INPUT)

box_ids = np.loadtxt(box_list)
clip_tars = []
for curID in box_ids:
	out_tar_file = File(job_name + '-' + str(int(curID)) + '.tar.gz')
	job.uses(out_tar_file, link=Link.OUTPUT, transfer=False)
	clip_tars.append((out_tar_file,curID))
job.addArguments(code_file,data_file,box_file,sdate,edate,out_tar_file,job_name)
dax.addJob(job)

for clip_tar,curID in clip_tars:
	job = Job('river-depth-wrapper.sh')
	job.uses(code_file,link=Link.INPUT)
	job.uses(data_file,link=Link.INPUT)
	job.uses(clip_tar,link=Link.INPUT)
	out_tar_file = File(job_name + '-' + str(int(curID)) + '-final.tar.gz')
        job.uses(out_tar_file, link=Link.OUTPUT, transfer=True)
	job.addArguments(code_file,data_file,job_name + str(int(curID)),out_tar_file)
	dax.addJob(job)


# Write the DAX
f = open('generated/dax-stage1.xml', 'w')
dax.writeXML(f)
f.close()

